---
import LanguageSwitcher from './LanguageSwitcher.astro';
import DarkModeToggle from './DarkModeToggle.astro';
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/95 dark:bg-gray-900/95 backdrop-blur-xl border-b border-gray-200/50 dark:border-gray-700/50 transition-all duration-300 shadow-sm">
  <nav class="container mx-auto px-3 sm:px-4 lg:px-6 py-3 sm:py-4">
    <div class="flex items-center justify-between">
      <!-- Enhanced Logo/Brand -->
      <a href="#home" class="group flex items-center space-x-2 sm:space-x-4 hover:scale-105 transition-transform duration-300">
        <div class="relative">
          <div class="w-10 h-10 sm:w-12 sm:h-12 bg-gradient-brand rounded-xl sm:rounded-2xl flex items-center justify-center shadow-brand group-hover:shadow-brand-lg transition-all duration-300">
            <span class="text-white font-bold text-base sm:text-lg tracking-tight">MV</span>
          </div>
          <!-- Subtle glow effect -->
          <div class="absolute inset-0 w-10 h-10 sm:w-12 sm:h-12 bg-gradient-brand rounded-xl sm:rounded-2xl opacity-0 group-hover:opacity-30 blur-lg transition-opacity duration-300"></div>
        </div>
        <div class="hidden xs:block">
          <div class="text-lg sm:text-xl font-bold bg-gradient-to-r from-primary-600 via-soul-500 to-accent-500 bg-clip-text text-transparent">
            Mr Valentino
          </div>
          <div class="text-xs text-gray-500 dark:text-gray-400 font-medium tracking-[0.15em] uppercase">
            La voix du cœur
          </div>
        </div>
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden lg:flex items-center space-x-6 xl:space-x-8">
        <a href="#home" class="nav-link" data-i18n="nav.home">Accueil</a>
        <a href="#about" class="nav-link" data-i18n="nav.about">À propos</a>
        <a href="#music" class="nav-link" data-i18n="nav.music">Musique</a>
        <a href="#videos" class="nav-link" data-i18n="nav.videos">Vidéos</a>
        <a href="#news" class="nav-link" data-i18n="nav.news">Actualités</a>
        <a href="#events" class="nav-link" data-i18n="nav.events">Événements</a>
        <a href="#contact" class="nav-link" data-i18n="nav.contact">Contact</a>
      </div>

      <!-- Controls: Language Switcher, Dark Mode & Mobile Menu Button -->
      <div class="flex items-center space-x-2 sm:space-x-3">
        <div class="hidden md:flex items-center space-x-3">
          <LanguageSwitcher />
          <DarkModeToggle />
        </div>
        
        <button id="mobile-menu-btn" class="lg:hidden p-2.5 text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-primary-50 dark:hover:bg-gray-800 rounded-xl transition-all duration-200 border border-gray-200/50 dark:border-gray-700/50 hover:border-primary-200 dark:hover:border-gray-600">
          <svg class="w-5 h-5 sm:w-6 sm:h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Enhanced Mobile Navigation -->
    <div id="mobile-menu" class="hidden lg:hidden mt-4 pt-4 border-t border-gray-200/50 dark:border-gray-700/50">
      <div class="flex flex-col space-y-2 sm:space-y-3">
        <a href="#home" class="nav-link-mobile" data-i18n="nav.home">Accueil</a>
        <a href="#about" class="nav-link-mobile" data-i18n="nav.about">À propos</a>
        <a href="#music" class="nav-link-mobile" data-i18n="nav.music">Musique</a>
        <a href="#videos" class="nav-link-mobile" data-i18n="nav.videos">Vidéos</a>
        <a href="#news" class="nav-link-mobile" data-i18n="nav.news">Actualités</a>
        <a href="#events" class="nav-link-mobile" data-i18n="nav.events">Événements</a>
        <a href="#contact" class="nav-link-mobile" data-i18n="nav.contact">Contact</a>
        
        <!-- Mobile Controls -->
        <div class="pt-4 border-t border-gray-200/50 dark:border-gray-700/50 flex flex-col space-y-4 md:hidden">
          <div class="flex items-center justify-between">
            <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Langue</span>
            <LanguageSwitcher />
          </div>
          <div class="flex items-center justify-between">
            <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Thème</span>
            <DarkModeToggle />
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  .nav-link {
    @apply text-gray-700 dark:text-gray-200 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-all duration-300 relative px-3 py-2 rounded-xl hover:bg-primary-50 dark:hover:bg-gray-800;
    font-size: 14px;
    letter-spacing: -0.01em;
  }
  
  @media (min-width: 1280px) {
    .nav-link {
      font-size: 15px;
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, #6366f1, #d946ef, #eab308);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateX(-50%);
    border-radius: 1px;
  }
  
  .nav-link:hover::after {
    width: 80%;
  }
  
  .nav-link-mobile {
    @apply text-gray-700 dark:text-gray-200 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-all duration-300 py-3 px-4 rounded-xl hover:bg-primary-50 dark:hover:bg-gray-800 border border-transparent hover:border-primary-200 dark:hover:border-gray-600;
    font-size: 15px;
    letter-spacing: -0.01em;
  }
  
  @media (min-width: 640px) {
    .nav-link-mobile {
      padding-top: 0.875rem;
      padding-bottom: 0.875rem;
      padding-left: 1.25rem;
      padding-right: 1.25rem;
    }
  }

  /* Extra small screens */
  @media (min-width: 475px) {
    .xs\:block {
      display: block;
    }
  }

  /* Enhanced mobile menu animation */
  #mobile-menu {
    animation: slideDown 0.3s ease-out;
  }

  #mobile-menu.hidden {
    animation: slideUp 0.3s ease-out;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideUp {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(-10px);
    }
  }

  /* Mobile menu button enhancement */
  #mobile-menu-btn {
    position: relative;
    overflow: hidden;
  }

  #mobile-menu-btn::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, #6366f1, #d946ef);
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: 0.75rem;
  }

  #mobile-menu-btn:hover::before {
    opacity: 0.05;
  }

  /* Focus enhancement */
  #mobile-menu-btn:focus-visible {
    outline: 2px solid #6366f1;
    outline-offset: 2px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    let isMenuOpen = false;
    
    mobileMenuBtn?.addEventListener('click', () => {
      isMenuOpen = !isMenuOpen;
      
      if (isMenuOpen) {
        mobileMenu?.classList.remove('hidden');
        mobileMenuBtn.setAttribute('aria-expanded', 'true');
        mobileMenuBtn.setAttribute('aria-label', 'Fermer le menu');
        
        // Change icon to X
        const svg = mobileMenuBtn.querySelector('svg');
        if (svg) {
          svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
        }
      } else {
        mobileMenu?.classList.add('hidden');
        mobileMenuBtn.setAttribute('aria-expanded', 'false');
        mobileMenuBtn.setAttribute('aria-label', 'Ouvrir le menu');
        
        // Change icon back to hamburger
        const svg = mobileMenuBtn.querySelector('svg');
        if (svg) {
          svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
        }
      }
    });

    // Close mobile menu when clicking on a link
    const mobileLinks = document.querySelectorAll('.nav-link-mobile');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
        isMenuOpen = false;
        mobileMenuBtn?.setAttribute('aria-expanded', 'false');
        mobileMenuBtn?.setAttribute('aria-label', 'Ouvrir le menu');
        
        // Reset icon
        const svg = mobileMenuBtn?.querySelector('svg');
        if (svg) {
          svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
        }
      });
    });

    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isMenuOpen) {
        mobileMenu?.classList.add('hidden');
        isMenuOpen = false;
        mobileMenuBtn?.setAttribute('aria-expanded', 'false');
        mobileMenuBtn?.focus();
      }
    });

    // Smooth scroll for all navigation links
    const allLinks = document.querySelectorAll('a[href^="#"]');
    allLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('href')?.substring(1);
        const targetElement = document.getElementById(targetId || '');
        if (targetElement) {
          const headerHeight = window.innerWidth >= 1024 ? 80 : 70;
          const targetPosition = targetElement.offsetTop - headerHeight;
          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          });
        }
      });
    });

    // Enhanced header scroll effect with performance optimization
    let ticking = false;
    let lastScrollY = window.scrollY;
    
    function updateHeader() {
      const header = document.querySelector('header');
      const currentScrollY = window.scrollY;
      
      if (currentScrollY > 100) {
        header?.classList.add('shadow-lg');
        header?.classList.remove('shadow-sm');
      } else {
        header?.classList.remove('shadow-lg');
        header?.classList.add('shadow-sm');
      }
      
      lastScrollY = currentScrollY;
      ticking = false;
    }
    
    window.addEventListener('scroll', () => {
      if (!ticking) {
        requestAnimationFrame(updateHeader);
        ticking = true;
      }
    }, { passive: true });
  });
</script>